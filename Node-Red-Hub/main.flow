[
    {
        "id": "2bd23ad5.f82ea6",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "f28adb43.c4a9a8",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "501a2190.d35e3",
        "type": "postgresdb",
        "z": "",
        "hostname": "localhost",
        "port": "5432",
        "db": "nred",
        "ssl": false
    },
    {
        "id": "20239c23.45b6f4",
        "type": "mqtt-broker",
        "z": "",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "50bdbd9f.6ba7d4",
        "type": "ui_tab",
        "z": "",
        "name": "Home",
        "icon": "dashboard"
    },
    {
        "id": "87652017.90213",
        "type": "ui_group",
        "z": "",
        "name": "Chart",
        "tab": "50bdbd9f.6ba7d4",
        "order": 2,
        "disp": false,
        "width": "20",
        "collapse": false
    },
    {
        "id": "a97d26b0.23fbf8",
        "type": "ui_group",
        "z": "",
        "name": "Values",
        "tab": "50bdbd9f.6ba7d4",
        "order": 1,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "24907dd5.9eb1e2",
        "type": "mqtt in",
        "z": "2bd23ad5.f82ea6",
        "name": "",
        "topic": "/sensor/data",
        "qos": "0",
        "broker": "20239c23.45b6f4",
        "x": 170,
        "y": 160,
        "wires": [
            [
                "c0be2779.923ac8"
            ]
        ]
    },
    {
        "id": "652fabbc.694a74",
        "type": "debug",
        "z": "2bd23ad5.f82ea6",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 850,
        "y": 60,
        "wires": []
    },
    {
        "id": "c0be2779.923ac8",
        "type": "json",
        "z": "2bd23ad5.f82ea6",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 350,
        "y": 160,
        "wires": [
            [
                "253203ef.a68c9c"
            ]
        ]
    },
    {
        "id": "253203ef.a68c9c",
        "type": "function",
        "z": "2bd23ad5.f82ea6",
        "name": "FillDate",
        "func": "msg.payload.created_on = new Date();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 520,
        "y": 160,
        "wires": [
            [
                "652fabbc.694a74",
                "900149fa.fb0738",
                "260aa896.770918"
            ]
        ]
    },
    {
        "id": "2f6cc3e6.bc1b1c",
        "type": "mqtt out",
        "z": "2bd23ad5.f82ea6",
        "name": "",
        "topic": "config",
        "qos": "0",
        "retain": "true",
        "broker": "20239c23.45b6f4",
        "x": 330,
        "y": 560,
        "wires": []
    },
    {
        "id": "aacc3a30.9decd8",
        "type": "inject",
        "z": "2bd23ad5.f82ea6",
        "name": "Set interval",
        "topic": "",
        "payload": "[88,2]",
        "payloadType": "bin",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 180,
        "y": 560,
        "wires": [
            [
                "2f6cc3e6.bc1b1c"
            ]
        ]
    },
    {
        "id": "6e14cdbf.ab6944",
        "type": "ui_gauge",
        "z": "2bd23ad5.f82ea6",
        "name": "",
        "group": "a97d26b0.23fbf8",
        "order": 2,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Humidity, %",
        "label": "units",
        "format": "{{value}}",
        "min": "0",
        "max": "100",
        "colors": [
            "#fff904",
            "#7689d3",
            "#1d019c"
        ],
        "seg1": "",
        "seg2": "",
        "x": 1010,
        "y": 200,
        "wires": []
    },
    {
        "id": "4c182937.342bd8",
        "type": "ui_gauge",
        "z": "2bd23ad5.f82ea6",
        "name": "",
        "group": "a97d26b0.23fbf8",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Temperature, C",
        "label": "units",
        "format": "{{value}}",
        "min": "-40",
        "max": "40",
        "colors": [
            "#002eca",
            "#c4f4ff",
            "#fb0d06"
        ],
        "seg1": "",
        "seg2": "",
        "x": 1020,
        "y": 120,
        "wires": []
    },
    {
        "id": "900149fa.fb0738",
        "type": "function",
        "z": "2bd23ad5.f82ea6",
        "name": "History",
        "func": "msg1 = {};\nmsg2 = {};\nmsg3 = {};\nif (msg.payload.dsn == \"A0000FC5A0000AE30\")\n{\n    msg3.topic = \"Erros, #\";\n    msg3.payload = msg.payload.value.err;\n    msg2.topic = \"Humidity, %\";\n    msg2.payload = Math.round(msg.payload.value.h * 100) / 100;\n    msg1.topic = \"Temperature, C\";\n    msg1.payload = Math.round(msg.payload.value.t * 100) / 100 - 5;\n}\nreturn [msg1, msg2, msg3];",
        "outputs": 3,
        "noerr": 0,
        "x": 810,
        "y": 160,
        "wires": [
            [
                "4c182937.342bd8",
                "6cffc362.a3a33c"
            ],
            [
                "6e14cdbf.ab6944",
                "6cffc362.a3a33c"
            ],
            [
                "6cffc362.a3a33c",
                "225fe56c.3da3fa"
            ]
        ]
    },
    {
        "id": "6cffc362.a3a33c",
        "type": "ui_chart",
        "z": "2bd23ad5.f82ea6",
        "name": "",
        "group": "87652017.90213",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Sensor Reading History",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#f8c272",
            "#a9d7ed",
            "#ff0f0f",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "x": 1100,
        "y": 160,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "260aa896.770918",
        "type": "function",
        "z": "2bd23ad5.f82ea6",
        "name": "INSERT Data",
        "func": "if (msg.payload.dtp == \"th\")\n{\n    msg.payload = [\n        {\n            query: 'begin',\n        },\n        {\n            \"query\": \"INSERT INTO sensor_data (seq, dsn, data_type, value, created_on) values ($seq, $dsn, $data_type1, $value1, $time), ($seq, $dsn, $data_type2, $value2, $time)\",\n            \"params\": {\n                \"seq\": msg.payload.seq,\n                \"dsn\": msg.payload.dsn,\n                \"data_type1\": \"temperature\",\n                \"value1\": msg.payload.value.t,\n                \"data_type2\": \"humidity\",\n                \"value2\": msg.payload.value.h,\n                \"time\": msg.payload.created_on,\n            }\n        },\n        {\n            query: 'commit',\n        },\n    ];\n}\nelse if (msg.payload.dtp == \"tp\")\n{\n    msg.payload = [\n        {\n            query: 'begin',\n        },\n        {\n            \"query\": \"INSERT INTO sensor_data (seq, dsn, data_type, value, created_on) values ($seq, $dsn, $data_type1, $value1, $time), ($seq, $dsn, $data_type2, $value2, $time)\",\n            \"params\": {\n                \"seq\": msg.payload.seq,\n                \"dsn\": msg.payload.dsn,\n                \"data_type1\": \"temperature\",\n                \"value1\": msg.payload.value.t,\n                \"data_type2\": \"preassure\",\n                \"value2\": msg.payload.value.p,\n                \"time\": msg.payload.created_on,\n            }\n        },\n        {\n            query: 'commit',\n        },\n    ];\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 840,
        "y": 340,
        "wires": [
            [
                "df5e0be1.4abdd8"
            ]
        ]
    },
    {
        "id": "df5e0be1.4abdd8",
        "type": "postgres",
        "z": "2bd23ad5.f82ea6",
        "postgresdb": "501a2190.d35e3",
        "name": "",
        "output": true,
        "outputs": 1,
        "x": 1040,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "8aa0a724.235368",
        "type": "mqtt in",
        "z": "2bd23ad5.f82ea6",
        "name": "",
        "topic": "/sensor/log/#",
        "qos": "0",
        "broker": "20239c23.45b6f4",
        "x": 170,
        "y": 440,
        "wires": [
            [
                "7d6186fc.390b68"
            ]
        ]
    },
    {
        "id": "455fced4.fb5d2",
        "type": "debug",
        "z": "2bd23ad5.f82ea6",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 810,
        "y": 440,
        "wires": []
    },
    {
        "id": "7d6186fc.390b68",
        "type": "json",
        "z": "2bd23ad5.f82ea6",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 330,
        "y": 440,
        "wires": [
            [
                "d12d344.1529ac8"
            ]
        ]
    },
    {
        "id": "d12d344.1529ac8",
        "type": "function",
        "z": "2bd23ad5.f82ea6",
        "name": "FillDate",
        "func": "msg.payload.created_on = new Date();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 540,
        "y": 440,
        "wires": [
            [
                "455fced4.fb5d2",
                "53674306.ea330c"
            ]
        ]
    },
    {
        "id": "225fe56c.3da3fa",
        "type": "ui_gauge",
        "z": "2bd23ad5.f82ea6",
        "name": "",
        "group": "a97d26b0.23fbf8",
        "order": 2,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Read Errors, #",
        "label": "units",
        "format": "{{value}}",
        "min": "0",
        "max": "12",
        "colors": [
            "#ffffff",
            "#f5bd54",
            "#fb0000"
        ],
        "seg1": "",
        "seg2": "",
        "x": 1020,
        "y": 240,
        "wires": []
    },
    {
        "id": "53674306.ea330c",
        "type": "function",
        "z": "2bd23ad5.f82ea6",
        "name": "INSERT Log",
        "func": "//if (msg.payload.value)\n{\n    msg.payload = [\n        {\n            query: 'begin',\n        },\n        {\n            \"query\": \"INSERT INTO sensor_log (seq, dsn, cat, mssg, created_on) values ($seq, $dsn, $cat, $mssg, $time)\",\n            \"params\": {\n                \"seq\": msg.payload.seq,\n                \"dsn\": msg.payload.dsn,\n                \"cat\": msg.payload.cat,\n                \"mssg\": msg.payload.mssg,\n                \"time\": msg.payload.created_on,\n            }\n        },\n        {\n            query: 'commit',\n        },\n    ];\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 810,
        "y": 520,
        "wires": [
            [
                "1f6beee0.ec3c41"
            ]
        ]
    },
    {
        "id": "1f6beee0.ec3c41",
        "type": "postgres",
        "z": "2bd23ad5.f82ea6",
        "postgresdb": "501a2190.d35e3",
        "name": "",
        "output": true,
        "outputs": 1,
        "x": 1020,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "624a430e.b3970c",
        "type": "function",
        "z": "2bd23ad5.f82ea6",
        "name": "SELECT Data",
        "func": "msg.payload = [\n    {\n        \"query\": \"SELECT * from sensor_data ORDER BY created_on DESC\",\n        \"output\": true\n    }    \n];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 360,
        "y": 640,
        "wires": [
            [
                "44643aa9.b6e754"
            ]
        ]
    },
    {
        "id": "ca6ceb83.0c2398",
        "type": "http response",
        "z": "2bd23ad5.f82ea6",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 820,
        "y": 640,
        "wires": []
    },
    {
        "id": "44643aa9.b6e754",
        "type": "postgres",
        "z": "2bd23ad5.f82ea6",
        "postgresdb": "501a2190.d35e3",
        "name": "",
        "output": true,
        "outputs": 1,
        "x": 600,
        "y": 640,
        "wires": [
            [
                "ca6ceb83.0c2398"
            ]
        ]
    },
    {
        "id": "38c9e382.ffb44c",
        "type": "http in",
        "z": "2bd23ad5.f82ea6",
        "name": "",
        "url": "/data",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 640,
        "wires": [
            [
                "624a430e.b3970c"
            ]
        ]
    },
    {
        "id": "b111e284.87996",
        "type": "function",
        "z": "2bd23ad5.f82ea6",
        "name": "SELECT Log",
        "func": "msg.payload = [\n    {\n        \"query\": \"SELECT * from sensor_log ORDER BY created_on DESC\",\n        \"output\": true\n    }    \n];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 350,
        "y": 700,
        "wires": [
            [
                "974dc2d7.599fd"
            ]
        ]
    },
    {
        "id": "bc4d7180.82a26",
        "type": "http response",
        "z": "2bd23ad5.f82ea6",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 820,
        "y": 700,
        "wires": []
    },
    {
        "id": "974dc2d7.599fd",
        "type": "postgres",
        "z": "2bd23ad5.f82ea6",
        "postgresdb": "501a2190.d35e3",
        "name": "",
        "output": true,
        "outputs": 1,
        "x": 600,
        "y": 700,
        "wires": [
            [
                "bc4d7180.82a26"
            ]
        ]
    },
    {
        "id": "bdcc25cd.0caee8",
        "type": "http in",
        "z": "2bd23ad5.f82ea6",
        "name": "",
        "url": "/log",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 700,
        "wires": [
            [
                "b111e284.87996"
            ]
        ]
    }
]